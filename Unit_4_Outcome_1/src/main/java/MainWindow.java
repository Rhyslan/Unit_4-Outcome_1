
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author dylan
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgpSearchCategories = new javax.swing.ButtonGroup();
        srpSidebarScroll = new javax.swing.JScrollPane();
        srpSidebarScroll.getVerticalScrollBar().setUnitIncrement(20);
        pnlSidebarInner = new javax.swing.JPanel();
        btnSearchMenuToggle = new javax.swing.JButton();
        pnlSearchMenu = new javax.swing.JPanel();
        pnlSearchMenu.setVisible(false);
        txtSearchQuery = new javax.swing.JTextField();
        btnSearchButton = new javax.swing.JButton();
        btnAdvancedSearchToggle = new javax.swing.JButton();
        btnAdvancedSearchToggle.setVisible(false);
        pnlAdvancedSearch = new javax.swing.JPanel();
        pnlAdvancedSearch.setVisible(false);
        strAdvancedPrevious = "AWC";
        lblSearchCategory = new javax.swing.JLabel();
        rtnTitleCategory = new javax.swing.JRadioButton();
        rtnNotesCategory = new javax.swing.JRadioButton();
        cbxExactSearch = new javax.swing.JCheckBox();
        lblFilters = new javax.swing.JLabel();
        btnClassificationToggle = new javax.swing.JButton();
        pnlClassificationFilter = new javax.swing.JPanel();
        pnlClassificationFilter.setVisible(false);
        cbxRatedG = new javax.swing.JCheckBox();
        cbxRatedPG = new javax.swing.JCheckBox();
        cbxRatedM = new javax.swing.JCheckBox();
        cbxRatedMA15 = new javax.swing.JCheckBox();
        cbxRatedR18 = new javax.swing.JCheckBox();
        btnMACLToggle = new javax.swing.JButton();
        pnlMACLFilter = new javax.swing.JPanel();
        pnlMACLFilter.setVisible(false);
        lblAbsoluteMinMACL = new javax.swing.JLabel();
        lblAbsoluteMaxMACL = new javax.swing.JLabel();
        lblSetMinMACL = new javax.swing.JLabel();
        txtSetMinMACL = new javax.swing.JTextField();
        txtSetMaxMACL = new javax.swing.JTextField();
        lblSetMaxMACL = new javax.swing.JLabel();
        rslMACLSlider = new JRangeSlider();
        btnRatingToggle = new javax.swing.JButton();
        pnlRatingFilter = new javax.swing.JPanel();
        pnlRatingFilter.setVisible(false);
        cbx0Stars = new javax.swing.JCheckBox();
        cbx1Star = new javax.swing.JCheckBox();
        cbx2Stars = new javax.swing.JCheckBox();
        cbx3Stars = new javax.swing.JCheckBox();
        cbx4Stars = new javax.swing.JCheckBox();
        cbx5Stars = new javax.swing.JCheckBox();
        btnStatusToggle = new javax.swing.JButton();
        pnlStatusFilter = new javax.swing.JPanel();
        pnlStatusFilter.setVisible(false);
        cbxNotPlaying = new javax.swing.JCheckBox();
        cbxInProgress = new javax.swing.JCheckBox();
        cbxFinishedGame = new javax.swing.JCheckBox();
        cbxFinishedStory = new javax.swing.JCheckBox();
        cbxAbandoned = new javax.swing.JCheckBox();
        btnYearToggle = new javax.swing.JButton();
        pnlYearFilter = new javax.swing.JPanel();
        pnlYearFilter.setVisible(false);
        lblAbsoluteEarliestYear = new javax.swing.JLabel();
        lblAbsoluteLatestYear = new javax.swing.JLabel();
        rslYearSlider = new JRangeSlider();
        txtSetMinYear = new javax.swing.JTextField();
        txtSetMaxYear = new javax.swing.JTextField();
        lblSetMaxYear = new javax.swing.JLabel();
        lblSetMinYear = new javax.swing.JLabel();
        tbpGameEntries = new javax.swing.JTabbedPane();
        pnlTab2 = new javax.swing.JPanel();
        gameEntry3 = new GameEntry();
        gameEntry4 = new GameEntry();
        gameEntry5 = new GameEntry();
        gameEntry6 = new GameEntry();
        pnlTab1 = new javax.swing.JPanel();
        gameEntry1 = new GameEntry();
        gameEntry2 = new GameEntry();
        mnbTitleBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        optLoad = new javax.swing.JMenuItem();
        optSave = new javax.swing.JMenuItem();
        optQuit = new javax.swing.JMenuItem();
        mnuGame = new javax.swing.JMenu();
        optAddNew = new javax.swing.JMenuItem();
        optUpdate = new javax.swing.JMenuItem();
        optRemove = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        optOnlineDocs = new javax.swing.JMenuItem();
        optManual = new javax.swing.JMenuItem();
        optAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Level-Up Library - Main Window");
        setMaximumSize(new java.awt.Dimension(1024, 600));
        setMinimumSize(new java.awt.Dimension(1024, 600));
        setName("MainWindow"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1024, 600));

        srpSidebarScroll.setBorder(null);
        srpSidebarScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        srpSidebarScroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlSidebarInner.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlSidebarInner.setPreferredSize(new java.awt.Dimension(230, 1016));
        org.jdesktop.swingx.VerticalLayout verticalLayout1 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout1.setGap(5);
        pnlSidebarInner.setLayout(verticalLayout1);

        btnSearchMenuToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnSearchMenuToggle.setText("Search");
        btnSearchMenuToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnSearchMenuToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnSearchMenuToggle.setIconTextGap(70);
        btnSearchMenuToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMenuToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnSearchMenuToggle);

        pnlSearchMenu.setBackground(new java.awt.Color(255, 0, 0));
        pnlSearchMenu.setPreferredSize(new java.awt.Dimension(230, 40));

        txtSearchQuery.setText("search query");

        btnSearchButton.setText("Search");

        javax.swing.GroupLayout pnlSearchMenuLayout = new javax.swing.GroupLayout(pnlSearchMenu);
        pnlSearchMenu.setLayout(pnlSearchMenuLayout);
        pnlSearchMenuLayout.setHorizontalGroup(
            pnlSearchMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSearchMenuLayout.setVerticalGroup(
            pnlSearchMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSearchMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchButton))
                .addGap(5, 5, 5))
        );

        pnlSidebarInner.add(pnlSearchMenu);

        btnAdvancedSearchToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnAdvancedSearchToggle.setText("Advanced");
        btnAdvancedSearchToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnAdvancedSearchToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnAdvancedSearchToggle.setIconTextGap(62);
        btnAdvancedSearchToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdvancedSearchToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnAdvancedSearchToggle);

        pnlAdvancedSearch.setBackground(new java.awt.Color(0, 0, 255));

        lblSearchCategory.setText("Category:");

        bgpSearchCategories.add(rtnTitleCategory);
        rtnTitleCategory.setSelected(true);
        rtnTitleCategory.setText("Title");

        bgpSearchCategories.add(rtnNotesCategory);
        rtnNotesCategory.setText("Notes");

        cbxExactSearch.setText("Exact Match:");
        cbxExactSearch.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cbxExactSearch.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        cbxExactSearch.setIconTextGap(10);

        javax.swing.GroupLayout pnlAdvancedSearchLayout = new javax.swing.GroupLayout(pnlAdvancedSearch);
        pnlAdvancedSearch.setLayout(pnlAdvancedSearchLayout);
        pnlAdvancedSearchLayout.setHorizontalGroup(
            pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdvancedSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSearchCategory)
                    .addComponent(rtnTitleCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtnNotesCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxExactSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAdvancedSearchLayout.setVerticalGroup(
            pnlAdvancedSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdvancedSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rtnTitleCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rtnNotesCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(cbxExactSearch)
                .addContainerGap())
        );

        pnlSidebarInner.add(pnlAdvancedSearch);

        lblFilters.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFilters.setText("Filters");
        lblFilters.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblFilters.setMinimumSize(new java.awt.Dimension(31, 20));
        lblFilters.setPreferredSize(new java.awt.Dimension(31, 20));
        pnlSidebarInner.add(lblFilters);

        btnClassificationToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnClassificationToggle.setText("Classification");
        btnClassificationToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnClassificationToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnClassificationToggle.setIconTextGap(56);
        btnClassificationToggle.setInheritsPopupMenu(true);
        btnClassificationToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClassificationToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnClassificationToggle);

        pnlClassificationFilter.setBackground(new java.awt.Color(255, 0, 0));
        pnlClassificationFilter.setPreferredSize(new java.awt.Dimension(230, 85));

        cbxRatedG.setText("G");

        cbxRatedPG.setText("PG");

        cbxRatedM.setText("M");

        cbxRatedMA15.setText("MA15+");

        cbxRatedR18.setText("R18+");

        javax.swing.GroupLayout pnlClassificationFilterLayout = new javax.swing.GroupLayout(pnlClassificationFilter);
        pnlClassificationFilter.setLayout(pnlClassificationFilterLayout);
        pnlClassificationFilterLayout.setHorizontalGroup(
            pnlClassificationFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassificationFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClassificationFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClassificationFilterLayout.createSequentialGroup()
                        .addComponent(cbxRatedM, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxRatedMA15, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbxRatedR18, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlClassificationFilterLayout.createSequentialGroup()
                        .addComponent(cbxRatedG, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxRatedPG, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, Short.MAX_VALUE))
        );
        pnlClassificationFilterLayout.setVerticalGroup(
            pnlClassificationFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassificationFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClassificationFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxRatedG)
                    .addComponent(cbxRatedPG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlClassificationFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxRatedM)
                    .addComponent(cbxRatedMA15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxRatedR18)
                .addGap(5, 5, 5))
        );

        pnlSidebarInner.add(pnlClassificationFilter);

        btnMACLToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnMACLToggle.setText("MACL");
        btnMACLToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnMACLToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnMACLToggle.setIconTextGap(78);
        btnMACLToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMACLToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnMACLToggle);

        pnlMACLFilter.setBackground(new java.awt.Color(255, 0, 0));

        lblAbsoluteMinMACL.setText("0");

        lblAbsoluteMaxMACL.setText("999");

        lblSetMinMACL.setText("Min:");

        txtSetMinMACL.setText("0");
        txtSetMinMACL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSetMinMACLActionPerformed(evt);
            }
        });

        txtSetMaxMACL.setText("999");
        txtSetMaxMACL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSetMaxMACLActionPerformed(evt);
            }
        });

        lblSetMaxMACL.setText("Max:");

        rslMACLSlider.setMaximum(999);
        rslMACLSlider.setSecondValue(999);
        rslMACLSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rslMACLSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout rslMACLSliderLayout = new javax.swing.GroupLayout(rslMACLSlider);
        rslMACLSlider.setLayout(rslMACLSliderLayout);
        rslMACLSliderLayout.setHorizontalGroup(
            rslMACLSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rslMACLSliderLayout.setVerticalGroup(
            rslMACLSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlMACLFilterLayout = new javax.swing.GroupLayout(pnlMACLFilter);
        pnlMACLFilter.setLayout(pnlMACLFilterLayout);
        pnlMACLFilterLayout.setHorizontalGroup(
            pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMACLFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rslMACLSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMACLFilterLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblAbsoluteMaxMACL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMACLFilterLayout.createSequentialGroup()
                        .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMACLFilterLayout.createSequentialGroup()
                                .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSetMinMACL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSetMaxMACL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSetMinMACL, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSetMaxMACL, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlMACLFilterLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(lblAbsoluteMinMACL, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 92, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMACLFilterLayout.setVerticalGroup(
            pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMACLFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAbsoluteMinMACL)
                    .addComponent(lblAbsoluteMaxMACL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rslMACLSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSetMinMACL)
                    .addComponent(txtSetMinMACL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMACLFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSetMaxMACL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSetMaxMACL))
                .addContainerGap())
        );

        pnlSidebarInner.add(pnlMACLFilter);

        btnRatingToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnRatingToggle.setText("Rating");
        btnRatingToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnRatingToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnRatingToggle.setIconTextGap(78);
        btnRatingToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRatingToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnRatingToggle);

        pnlRatingFilter.setBackground(new java.awt.Color(255, 0, 0));
        pnlRatingFilter.setPreferredSize(new java.awt.Dimension(230, 160));

        cbx0Stars.setText("None");

        cbx1Star.setText("1 Star");

        cbx2Stars.setText("2 Stars");

        cbx3Stars.setText("3 Stars");

        cbx4Stars.setText("4 Stars");

        cbx5Stars.setText("5 Stars");

        javax.swing.GroupLayout pnlRatingFilterLayout = new javax.swing.GroupLayout(pnlRatingFilter);
        pnlRatingFilter.setLayout(pnlRatingFilterLayout);
        pnlRatingFilterLayout.setHorizontalGroup(
            pnlRatingFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRatingFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRatingFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbx0Stars, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx1Star, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx2Stars, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx3Stars, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx4Stars, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx5Stars, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        pnlRatingFilterLayout.setVerticalGroup(
            pnlRatingFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRatingFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbx0Stars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx1Star)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx2Stars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx3Stars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx4Stars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx5Stars)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSidebarInner.add(pnlRatingFilter);

        btnStatusToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnStatusToggle.setText("Status");
        btnStatusToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnStatusToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnStatusToggle.setIconTextGap(74);
        btnStatusToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnStatusToggle);

        pnlStatusFilter.setBackground(new java.awt.Color(255, 0, 0));

        cbxNotPlaying.setText("NP");

        cbxInProgress.setText("IP");

        cbxFinishedGame.setText("FG");

        cbxFinishedStory.setText("FS");

        cbxAbandoned.setText("AB");

        javax.swing.GroupLayout pnlStatusFilterLayout = new javax.swing.GroupLayout(pnlStatusFilter);
        pnlStatusFilter.setLayout(pnlStatusFilterLayout);
        pnlStatusFilterLayout.setHorizontalGroup(
            pnlStatusFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStatusFilterLayout.createSequentialGroup()
                        .addComponent(cbxNotPlaying, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxInProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlStatusFilterLayout.createSequentialGroup()
                        .addComponent(cbxFinishedGame, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxFinishedStory, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbxAbandoned, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        pnlStatusFilterLayout.setVerticalGroup(
            pnlStatusFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxNotPlaying)
                    .addComponent(cbxInProgress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlStatusFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxFinishedGame)
                    .addComponent(cbxFinishedStory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxAbandoned)
                .addGap(6, 6, 6))
        );

        pnlSidebarInner.add(pnlStatusFilter);

        btnYearToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collapsed.png"))); // NOI18N
        btnYearToggle.setText("Year");
        btnYearToggle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnYearToggle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnYearToggle.setIconTextGap(79);
        btnYearToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearToggleActionPerformed(evt);
            }
        });
        pnlSidebarInner.add(btnYearToggle);

        pnlYearFilter.setBackground(new java.awt.Color(255, 0, 0));

        lblAbsoluteEarliestYear.setText("1958");

        lblAbsoluteLatestYear.setText("2023");

        rslYearSlider.setMaximum(2023);
        rslYearSlider.setMinimum(1958);
        rslYearSlider.setSecondValue(2023);
        rslYearSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rslYearSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout rslYearSliderLayout = new javax.swing.GroupLayout(rslYearSlider);
        rslYearSlider.setLayout(rslYearSliderLayout);
        rslYearSliderLayout.setHorizontalGroup(
            rslYearSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rslYearSliderLayout.setVerticalGroup(
            rslYearSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        txtSetMinYear.setText("1958");
        txtSetMinYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSetMinYearActionPerformed(evt);
            }
        });

        txtSetMaxYear.setText("2023");
        txtSetMaxYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSetMaxYearActionPerformed(evt);
            }
        });

        lblSetMaxYear.setText("Latest:");

        lblSetMinYear.setText("Earliest:");

        javax.swing.GroupLayout pnlYearFilterLayout = new javax.swing.GroupLayout(pnlYearFilter);
        pnlYearFilter.setLayout(pnlYearFilterLayout);
        pnlYearFilterLayout.setHorizontalGroup(
            pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlYearFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rslYearSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlYearFilterLayout.createSequentialGroup()
                        .addGroup(pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSetMinYear, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(lblSetMaxYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSetMaxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSetMinYear, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92))
                    .addGroup(pnlYearFilterLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblAbsoluteEarliestYear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAbsoluteLatestYear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlYearFilterLayout.setVerticalGroup(
            pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlYearFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAbsoluteEarliestYear)
                    .addComponent(lblAbsoluteLatestYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rslYearSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSetMinYear)
                    .addComponent(txtSetMinYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlYearFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSetMaxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSetMaxYear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSidebarInner.add(pnlYearFilter);

        srpSidebarScroll.setViewportView(pnlSidebarInner);

        org.jdesktop.swingx.VerticalLayout verticalLayout2 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout2.setGap(5);
        pnlTab2.setLayout(verticalLayout2);
        pnlTab2.add(gameEntry3);
        pnlTab2.add(gameEntry4);
        pnlTab2.add(gameEntry5);
        pnlTab2.add(gameEntry6);

        tbpGameEntries.addTab("tab2", pnlTab2);

        org.jdesktop.swingx.VerticalLayout verticalLayout3 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout3.setGap(5);
        pnlTab1.setLayout(verticalLayout3);
        pnlTab1.add(gameEntry1);
        pnlTab1.add(gameEntry2);

        tbpGameEntries.addTab("tab1", pnlTab1);

        mnuFile.setText("File");

        optLoad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        optLoad.setText("Load");
        optLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optLoadActionPerformed(evt);
            }
        });
        mnuFile.add(optLoad);

        optSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        optSave.setText("Save");
        mnuFile.add(optSave);

        optQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        optQuit.setText("Quit");
        mnuFile.add(optQuit);

        mnbTitleBar.add(mnuFile);

        mnuGame.setText("Game");

        optAddNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        optAddNew.setText("Add New");
        optAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optAddNewActionPerformed(evt);
            }
        });
        mnuGame.add(optAddNew);

        optUpdate.setText("Update");
        optUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optUpdateActionPerformed(evt);
            }
        });
        mnuGame.add(optUpdate);

        optRemove.setText("Remove");
        mnuGame.add(optRemove);

        mnbTitleBar.add(mnuGame);

        mnuHelp.setText("Help");

        optOnlineDocs.setText("Online Docs");
        mnuHelp.add(optOnlineDocs);

        optManual.setText("Manual");
        mnuHelp.add(optManual);

        optAbout.setText("About");
        mnuHelp.add(optAbout);

        mnbTitleBar.add(mnuHelp);

        setJMenuBar(mnbTitleBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(srpSidebarScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbpGameEntries, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(srpSidebarScroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(tbpGameEntries)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ImageIcon icnCollapsedIcon = new ImageIcon(getClass().getResource("/Collapsed.png"));
    private ImageIcon icnExpandedIcon = new ImageIcon(getClass().getResource("/Expanded.png"));
    
    private static String strAdvancedPrevious = "N/A";
    
    private static String doLogicalComparisons(String strStates) {
        /**
         *************KEY**************
         * OS = Opening search
         * CS = Closing search
         * AWO = Advanced was open
         * AWC = Advanced was closed
         * SIO = Search is open
         * OA = Opening Advanced
         * CA = Closing advanced
         */
        
        Map<String, String> finalStates = new HashMap<String, String>();
        finalStates.put("CS, AWO", "false, false"); // Closing search, advanced was closed
        finalStates.put("CS, AWC", "false, false"); // Closing search, advanced was open
        finalStates.put("OS, AWO", "true, true"); // Opening search, advanced was closed
        finalStates.put("OS, AWC", "true, false"); // Opening search, advanced was open
        finalStates.put("SIO, OA", "true, true"); // Search is open, opening advanced
        finalStates.put("SIO, CA", "true, false"); // Search is open, closing advanced
        
        return finalStates.get(strStates);
    }    
    
    //<editor-fold defaultstate="collapsed" desc="UI Setup Functions">
    private void btnSearchMenuToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMenuToggleActionPerformed
        boolean searchState = pnlSearchMenu.isVisible();
        boolean advancedState = pnlAdvancedSearch.isVisible();
        String searchCode = "N/A";
        String advancedCode = "N/A";
        
        if (searchState == true) searchCode = "CS";
        else if (searchState == false) searchCode = "OS";
        
        if (advancedState == true) advancedCode = "AWO";
        else if (advancedState == false) advancedCode = "AWC";
        
        if (searchCode == "OS") advancedCode = strAdvancedPrevious;
        
        String newStates = doLogicalComparisons(searchCode + ", " + advancedCode);
        
        strAdvancedPrevious = advancedCode;
        
        String[] bools = newStates.split(", ");
        
        pnlSearchMenu.setVisible(Boolean.parseBoolean(bools[0]));
        btnAdvancedSearchToggle.setVisible(Boolean.parseBoolean(bools[0]));
        pnlAdvancedSearch.setVisible(Boolean.parseBoolean(bools[1]));
        
        if (pnlSearchMenu.isVisible()) btnSearchMenuToggle.setIcon(icnExpandedIcon);
        else btnSearchMenuToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnSearchMenuToggleActionPerformed

    private void btnAdvancedSearchToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdvancedSearchToggleActionPerformed
        boolean advancedState = pnlAdvancedSearch.isVisible();
        String searchCode = "SIO";
        String advancedCode = "N/A";
        
        if (advancedState == true) advancedCode = "CA";
        else if (advancedState == false) advancedCode = "OA";
        
        strAdvancedPrevious = advancedCode;
        
        String newStates = doLogicalComparisons(searchCode + ", " + advancedCode);
        
        String[] bools = newStates.split(", ");
        
        pnlSearchMenu.setVisible(Boolean.parseBoolean(bools[0]));
        btnAdvancedSearchToggle.setVisible(Boolean.parseBoolean(bools[0]));
        pnlAdvancedSearch.setVisible(Boolean.parseBoolean(bools[1]));
        
        if (pnlAdvancedSearch.isVisible()) btnAdvancedSearchToggle.setIcon(icnExpandedIcon);
        else btnAdvancedSearchToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnAdvancedSearchToggleActionPerformed

    private void btnClassificationToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClassificationToggleActionPerformed
        pnlClassificationFilter.setVisible(!pnlClassificationFilter.isVisible());
        if (pnlClassificationFilter.isVisible()) btnClassificationToggle.setIcon(icnExpandedIcon);
        else btnClassificationToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnClassificationToggleActionPerformed

    private void btnMACLToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMACLToggleActionPerformed
        pnlMACLFilter.setVisible(!pnlMACLFilter.isVisible());
        if (pnlMACLFilter.isVisible()) btnMACLToggle.setIcon(icnExpandedIcon);
        else btnMACLToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnMACLToggleActionPerformed

    private void btnRatingToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRatingToggleActionPerformed
        pnlRatingFilter.setVisible(!pnlRatingFilter.isVisible());
        if (pnlRatingFilter.isVisible()) btnRatingToggle.setIcon(icnExpandedIcon);
        else btnRatingToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnRatingToggleActionPerformed

    private void btnStatusToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusToggleActionPerformed
        pnlStatusFilter.setVisible(!pnlStatusFilter.isVisible());
        if (pnlStatusFilter.isVisible()) btnStatusToggle.setIcon(icnExpandedIcon);
        else btnStatusToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnStatusToggleActionPerformed

    private void btnYearToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearToggleActionPerformed
        pnlYearFilter.setVisible(!pnlYearFilter.isVisible());
        if (pnlYearFilter.isVisible()) btnYearToggle.setIcon(icnExpandedIcon);
        else btnYearToggle.setIcon(icnCollapsedIcon);
    }//GEN-LAST:event_btnYearToggleActionPerformed

    private void rslMACLSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rslMACLSliderStateChanged
        txtSetMinMACL.setText(Integer.toString(rslMACLSlider.getValue()));
        txtSetMaxMACL.setText(Integer.toString(rslMACLSlider.getSecondValue()));
    }//GEN-LAST:event_rslMACLSliderStateChanged

    private void txtSetMinMACLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSetMinMACLActionPerformed
        rslMACLSlider.setValue(Integer.parseInt(txtSetMinMACL.getText()));
    }//GEN-LAST:event_txtSetMinMACLActionPerformed

    private void txtSetMaxMACLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSetMaxMACLActionPerformed
        rslMACLSlider.setSecondValue(Integer.parseInt(txtSetMaxMACL.getText()));
    }//GEN-LAST:event_txtSetMaxMACLActionPerformed

    private void rslYearSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rslYearSliderStateChanged
        txtSetMinYear.setText(Integer.toString(rslYearSlider.getValue()));
        txtSetMaxYear.setText(Integer.toString(rslYearSlider.getSecondValue()));
    }//GEN-LAST:event_rslYearSliderStateChanged

    private void txtSetMinYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSetMinYearActionPerformed
        rslYearSlider.setValue(Integer.parseInt(txtSetMinYear.getText()));
    }//GEN-LAST:event_txtSetMinYearActionPerformed

    private void txtSetMaxYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSetMaxYearActionPerformed
        rslYearSlider.setSecondValue(Integer.parseInt(txtSetMaxYear.getText()));
    }//GEN-LAST:event_txtSetMaxYearActionPerformed
    //</editor-fold>
    
    private void optAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optAddNewActionPerformed
        GameDataWindow frmAddGame = new GameDataWindow();
        frmAddGame.setTitle("Level-Up Library - Add Game");
        frmAddGame.btnRemoveGame.setEnabled(false);
        frmAddGame.setVisible(true);
    }//GEN-LAST:event_optAddNewActionPerformed

    private void optUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optUpdateActionPerformed
        GameDataWindow frmAddGame = new GameDataWindow();
        frmAddGame.setTitle("Level-Up Library - Update Game");
        frmAddGame.setVisible(true);
    }//GEN-LAST:event_optUpdateActionPerformed

    private void optLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optLoadActionPerformed
        JFileChooser jfcFileBrowser = new JFileChooser(System.getProperty("user.dir") + "\\src\\main\\resources\\");
        jfcFileBrowser.setSelectedFile(new File("database.xml"));
        jfcFileBrowser.addChoosableFileFilter(new FileNameExtensionFilter("XML Files", "xml"));
        jfcFileBrowser.setAcceptAllFileFilterUsed(false);
        int intResponse=  jfcFileBrowser.showOpenDialog(null);
        Path pthRecordFilePath = null;
        
        if (intResponse == JFileChooser.APPROVE_OPTION) {
            pthRecordFilePath = Paths.get(jfcFileBrowser.getSelectedFile().getAbsolutePath());
        }
        else {
            return;
        }
        
        // Stucture: [id, platform, boxart path, title, length, class, year, status, rating, notes]
        String[][] gameData = new String[2][10];
        
        //<editor-fold defaultstate="collapsed" desc="XML Loading">
        
        try {
            DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
            Document doc = builder.parse(new File(pthRecordFilePath.toString()));
            doc.getDocumentElement().normalize();
            
            Element root = doc.getDocumentElement();
            
            NodeList nodeList = root.getChildNodes();
            
            int a = 0;
            int b = 2;
            
            for (int i=0; i<gameData[0].length-1;i++) {
                Node current = nodeList.item(i);
                if (current != null && current.getNodeType() == Node.ELEMENT_NODE) {
                    NamedNodeMap attrList = current.getAttributes();
                
                    for (int j=0;j<attrList.getLength();j++) {
                        gameData[i-(i-a)][j] = attrList.item(j).getNodeValue();
                    }
                
                    NodeList childList = current.getChildNodes();
                    Node child;

                    for (int k=0; k<childList.getLength()-1; k++) {
                        child = childList.item(k);
                        if (child.getNodeType() == Node.ELEMENT_NODE) {
                            gameData[i-(i-a)][b] = child.getTextContent();
                            //System.out.println(child.setGetContent());
                            b++;
                        }
                    }
                    b = 2;
                    a++;
                }
            }
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int l = 0; l < gameData.length; l++) {
            for (int m = 0; m < 10; m++) {
                System.out.println(gameData[l][m]);
            }
        }
        
        //</editor-fold>
    }//GEN-LAST:event_optLoadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgpSearchCategories;
    private javax.swing.JButton btnAdvancedSearchToggle;
    private javax.swing.JButton btnClassificationToggle;
    private javax.swing.JButton btnMACLToggle;
    private javax.swing.JButton btnRatingToggle;
    private javax.swing.JButton btnSearchButton;
    private javax.swing.JButton btnSearchMenuToggle;
    private javax.swing.JButton btnStatusToggle;
    private javax.swing.JButton btnYearToggle;
    private javax.swing.JCheckBox cbx0Stars;
    private javax.swing.JCheckBox cbx1Star;
    private javax.swing.JCheckBox cbx2Stars;
    private javax.swing.JCheckBox cbx3Stars;
    private javax.swing.JCheckBox cbx4Stars;
    private javax.swing.JCheckBox cbx5Stars;
    private javax.swing.JCheckBox cbxAbandoned;
    private javax.swing.JCheckBox cbxExactSearch;
    private javax.swing.JCheckBox cbxFinishedGame;
    private javax.swing.JCheckBox cbxFinishedStory;
    private javax.swing.JCheckBox cbxInProgress;
    private javax.swing.JCheckBox cbxNotPlaying;
    private javax.swing.JCheckBox cbxRatedG;
    private javax.swing.JCheckBox cbxRatedM;
    private javax.swing.JCheckBox cbxRatedMA15;
    private javax.swing.JCheckBox cbxRatedPG;
    private javax.swing.JCheckBox cbxRatedR18;
    private GameEntry gameEntry1;
    private GameEntry gameEntry2;
    private GameEntry gameEntry3;
    private GameEntry gameEntry4;
    private GameEntry gameEntry5;
    private GameEntry gameEntry6;
    private javax.swing.JLabel lblAbsoluteEarliestYear;
    private javax.swing.JLabel lblAbsoluteLatestYear;
    private javax.swing.JLabel lblAbsoluteMaxMACL;
    private javax.swing.JLabel lblAbsoluteMinMACL;
    private javax.swing.JLabel lblFilters;
    private javax.swing.JLabel lblSearchCategory;
    private javax.swing.JLabel lblSetMaxMACL;
    private javax.swing.JLabel lblSetMaxYear;
    private javax.swing.JLabel lblSetMinMACL;
    private javax.swing.JLabel lblSetMinYear;
    private javax.swing.JMenuBar mnbTitleBar;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuGame;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem optAbout;
    private javax.swing.JMenuItem optAddNew;
    private javax.swing.JMenuItem optLoad;
    private javax.swing.JMenuItem optManual;
    private javax.swing.JMenuItem optOnlineDocs;
    private javax.swing.JMenuItem optQuit;
    private javax.swing.JMenuItem optRemove;
    private javax.swing.JMenuItem optSave;
    private javax.swing.JMenuItem optUpdate;
    private javax.swing.JPanel pnlAdvancedSearch;
    private javax.swing.JPanel pnlClassificationFilter;
    private javax.swing.JPanel pnlMACLFilter;
    private javax.swing.JPanel pnlRatingFilter;
    private javax.swing.JPanel pnlSearchMenu;
    private javax.swing.JPanel pnlSidebarInner;
    private javax.swing.JPanel pnlStatusFilter;
    private javax.swing.JPanel pnlTab1;
    private javax.swing.JPanel pnlTab2;
    private javax.swing.JPanel pnlYearFilter;
    private JRangeSlider rslMACLSlider;
    private JRangeSlider rslYearSlider;
    private javax.swing.JRadioButton rtnNotesCategory;
    private javax.swing.JRadioButton rtnTitleCategory;
    private javax.swing.JScrollPane srpSidebarScroll;
    private javax.swing.JTabbedPane tbpGameEntries;
    private javax.swing.JTextField txtSearchQuery;
    private javax.swing.JTextField txtSetMaxMACL;
    private javax.swing.JTextField txtSetMaxYear;
    private javax.swing.JTextField txtSetMinMACL;
    private javax.swing.JTextField txtSetMinYear;
    // End of variables declaration//GEN-END:variables
}
